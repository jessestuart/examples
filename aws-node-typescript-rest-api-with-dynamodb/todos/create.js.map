{"version":3,"file":"create.js","sourceRoot":"","sources":["create.ts"],"names":[],"mappings":"AAAA,YAAY,CAAA;;;;;;;;;AAEZ,2CAA8B;AAC9B,yCAA4B;AAEpB,IAAA,uBAAQ,CAAQ;AAExB,IAAM,QAAQ,GAAG,IAAI,QAAQ,CAAC,cAAc,EAAE,CAAA;AAEjC,QAAA,MAAM,GAAG,UAAC,KAAU,EAAE,QAAa,EAAE,QAAa;IAC7D,IAAM,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAA;IACtC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;IACvB,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;IAEnC,IAAI,OAAO,IAAI,CAAC,IAAI,KAAK,QAAQ,EAAE;QACjC,OAAO,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAA;QAClC,QAAQ,CAAC,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC,CAAA;QACrD,OAAM;KACP;IAED,IAAM,MAAM,GAAG;QACb,SAAS,EAAE,OAAO,CAAC,GAAG,CAAC,cAAc;QACrC,IAAI,EAAE;YACJ,OAAO,EAAE,KAAK;YACd,SAAS,EAAE,SAAS;YACpB,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE;YACb,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,SAAS,EAAE,SAAS;SACrB;KACF,CAAA;IAED,iCAAiC;IACjC,aAAa;IACb,QAAQ,CAAC,GAAG,CAAC,MAAM,EAAE,UAAC,KAAK,EAAE,MAAM;QACjC,0BAA0B;QAC1B,IAAI,KAAK,EAAE;YACT,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;YACpB,QAAQ,CAAC,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC,CAAA;YACrD,OAAM;SACP;QAED,oBAAoB;QACpB,IAAM,QAAQ,GAAG;YACf,UAAU,EAAE,GAAG;YACf,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;SAC7B,CAAA;QACD,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAA;IAC1B,CAAC,CAAC,CAAA;AACJ,CAAC,CAAA","sourcesContent":["'use strict'\n\nimport * as AWS from 'aws-sdk'\nimport * as uuid from 'uuid'\n\nconst { DynamoDB } = AWS\n\nconst dynamoDb = new DynamoDB.DocumentClient()\n\nexport const create = (event: any, _context: any, callback: any) => {\n  const timestamp = new Date().getTime()\n  console.log(event.body)\n  const data = JSON.parse(event.body)\n\n  if (typeof data.text !== 'string') {\n    console.error('Validation Failed')\n    callback(new Error(\"Couldn't create the todo item.\"))\n    return\n  }\n\n  const params = {\n    TableName: process.env.DYNAMODB_TABLE,\n    Item: {\n      checked: false,\n      createdAt: timestamp,\n      id: uuid.v1(),\n      text: data.text,\n      updatedAt: timestamp,\n    },\n  }\n\n  // write the todo to the database\n  // @ts-ignore\n  dynamoDb.put(params, (error, result) => {\n    // handle potential errors\n    if (error) {\n      console.error(error)\n      callback(new Error(\"Couldn't create the todo item.\"))\n      return\n    }\n\n    // create a response\n    const response = {\n      statusCode: 200,\n      body: JSON.stringify(result),\n    }\n    callback(null, response)\n  })\n}\n"]}